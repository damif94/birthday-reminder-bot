service: birthday-bot
frameworkVersion: '3'

resources:
  Resources:
    BirthdayReminderBotBirthdaysTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: birthday_reminder_bot_birthdays
        AttributeDefinitions:
          - AttributeName: chat_id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
          - AttributeName: birthday_day
            AttributeType: N
          - AttributeName: birthday_month
            AttributeType: N
        KeySchema:
          - AttributeName: chat_id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: BirthdayIndex
            KeySchema:
              - AttributeName: birthday_month
                KeyType: HASH
              - AttributeName: birthday_day
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: UserBirthdaysIndex
            KeySchema:
              - AttributeName: chat_id
                KeyType: HASH
              - AttributeName: birthday_month
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    BirthdayReminderBotUsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: birthday_reminder_bot_users
        AttributeDefinitions:
          - AttributeName: chat_id
            AttributeType: S
          - AttributeName: utc_offset
            AttributeType: N
        KeySchema:
          - AttributeName: chat_id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UtcOffsetIndex
            KeySchema:
              - AttributeName: utc_offset
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

provider:
  stage: prod
  name: aws
  runtime: python3.11
  region: sa-east-1
  environment:
    TOKEN: ${env:TOKEN}
    STORAGE_TYPE: DynamoDBBirthdayStorage
    BIRTHDAYS_TABLE_NAME: birthday_reminder_bot_birthdays
    USERS_TABLE_NAME: birthday_reminder_bot_users

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:Scan"
            - "dynamodb:DeleteItem"
          Resource: "arn:aws:dynamodb:sa-east-1:378764373381:table/birthday_reminder_bot_birthdays"
        - Effect: "Allow"
          Action:
            - "dynamodb:GetItem"
            - "dynamodb:PutItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:Scan"
            - "dynamodb:DeleteItem"
          Resource: "arn:aws:dynamodb:sa-east-1:378764373381:table/birthday_reminder_bot_users"
package:
  patterns:
    - '!**'
    - 'lambda/**'
    - 'src/**'

functions:
  birthday_reminder:
    handler: lambda.handlers.remind
    layers:
      - arn:aws:lambda:sa-east-1:378764373381:layer:birthday-bot-prod-python-requirements:2
    events:
      - schedule:
          rate: cron(0 3 * * ? *)
  birthday_telegram_webhook:
    handler: lambda.handlers.webhook
    layers:
      - arn:aws:lambda:sa-east-1:378764373381:layer:birthday-bot-prod-python-requirements:2
    events:
      - http:
          path: /
          method: post
          cors: true

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    usePoetry: true
    slim: true
    layer: true
    zip: true
    noDeploy:
      - flask # this is used for the server version